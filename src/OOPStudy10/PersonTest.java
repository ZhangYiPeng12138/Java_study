package OOPStudy10;

/**
 * 面向对象特征之三：多态性
 *
 * 1、理解多态性：可以理解为一个事物的多种形态
 * 2、何为多态性：
 *      对象的多态性：父类的引用指向子类的对象（或者子类的对象赋给父类的引用）
 * 3、多态的使用，虚拟方法调用
 *      有了对象的多态性之后，在编译期间只能调用父类中声明的方法，但是在运行
 *      期间，实际执行的是子类重写的方法
 *      总结：编译看左边，执行看右边
 * 4、多态性使用的前提：
 *      1、类的继承关系
 *      2、子类对父类的方法进行了重写
 *
 */
public class PersonTest {
    public static void main(String[] args) {
        //对象的多态性：父类的引用指向子类的对象
        Person p1 = new Man();
        Person p2 = new Woman();
        //多态的使用，当调用子类、父类同名同参数的方法时，实际执行的是子类重写的方法
        p1.eat();
        p2.eat();
    }
}